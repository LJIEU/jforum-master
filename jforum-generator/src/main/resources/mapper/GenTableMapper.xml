<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace等于mapper接口类的全限定名,这样实现对应 -->
<mapper namespace="com.liu.generator.mapper.GenTableMapper">
    <resultMap type="com.liu.generator.entity.GenTable" id="GenTableResult">
        <id property="tableId" column="table_id"/>
        <result property="tableName" column="table_name"/>
        <result property="tableComment" column="table_comment"/>
        <result property="subTableName" column="sub_table_name"/>
        <result property="subTableFkName" column="sub_table_fk_name"/>
        <result property="className" column="class_name"/>
        <result property="tplCategory" column="tpl_category"/>
        <result property="tplWebType" column="tpl_web_type"/>
        <result property="packageName" column="package_name"/>
        <result property="moduleName" column="module_name"/>
        <result property="businessName" column="business_name"/>
        <result property="functionName" column="function_name"/>
        <result property="functionAuthor" column="function_author"/>
        <result property="genType" column="gen_type"/>
        <result property="genPath" column="gen_path"/>
        <result property="options" column="options"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <collection property="columns" javaType="java.util.List" resultMap="GenTableColumnResult"/>
    </resultMap>

    <resultMap type="com.liu.generator.entity.GenTableColumn" id="GenTableColumnResult">
        <id property="columnId" column="column_id"/>
        <result property="tableId" column="table_id"/>
        <result property="columnName" column="column_name"/>
        <result property="columnComment" column="column_comment"/>
        <result property="columnType" column="column_type"/>
        <result property="javaType" column="java_type"/>
        <result property="javaField" column="java_field"/>
        <result property="isPk" column="is_pk"/>
        <result property="isIncrement" column="is_increment"/>
        <result property="isRequired" column="is_required"/>
        <result property="isInsert" column="is_insert"/>
        <result property="isEdit" column="is_edit"/>
        <result property="isList" column="is_list"/>
        <result property="isQuery" column="is_query"/>
        <result property="queryType" column="query_type"/>
        <result property="htmlType" column="html_type"/>
        <result property="dictType" column="dict_type"/>
        <result property="sort" column="sort"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectGenTableVo">
        select `table_id`,
               `table_name`,
               `table_comment`,
               `sub_table_name`,
               `sub_table_fk_name`,
               `class_name`,
               `tpl_category`,
               `tpl_web_type`,
               `package_name`,
               `module_name`,
               `function_name`,
               `function_author`,
               `gen_type`,
               `gen_path`,
               `create_by`,
               `create_time`,
               `update_by`,
               `update_time`,
               `remark`
        from jforum_system.`gen_table`
    </sql>
    <insert id="insertGenTable" parameterType="com.liu.generator.entity.GenTable" useGeneratedKeys="true"
            keyProperty="tableId">
        insert into `gen_table` (
        <if test="tableName != null">table_name,</if>
        <if test="tableComment != null and tableComment != ''">table_comment,</if>
        <if test="className != null and className != ''">class_name,</if>
        <if test="tplCategory != null and tplCategory != ''">tpl_category,</if>
        <if test="tplWebType != null and tplWebType != ''">tpl_web_type,</if>
        <if test="packageName != null and packageName != ''">package_name,</if>
        <if test="moduleName != null and moduleName != ''">module_name,</if>
        <if test="businessName != null and businessName != ''">business_name,</if>
        <if test="functionName != null and functionName != ''">function_name,</if>
        <if test="functionAuthor != null and functionAuthor != ''">function_author,</if>
        <if test="genType != null and genType != ''">gen_type,</if>
        <if test="genPath != null and genPath != ''">gen_path,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="tableName != null">#{tableName},</if>
        <if test="tableComment != null and tableComment != ''">#{tableComment},</if>
        <if test="className != null and className != ''">#{className},</if>
        <if test="tplCategory != null and tplCategory != ''">#{tplCategory},</if>
        <if test="tplWebType != null and tplWebType != ''">#{tplWebType},</if>
        <if test="packageName != null and packageName != ''">#{packageName},</if>
        <if test="moduleName != null and moduleName != ''">#{moduleName},</if>
        <if test="businessName != null and businessName != ''">#{businessName},</if>
        <if test="functionName != null and functionName != ''">#{functionName},</if>
        <if test="functionAuthor != null and functionAuthor != ''">#{functionAuthor},</if>
        <if test="genType != null and genType != ''">#{genType},</if>
        <if test="genPath != null and genPath != ''">#{genPath},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>
    <select id="getTableInfo" parameterType="String" resultType="com.liu.generator.entity.GenTable">
        select TABLE_NAME    as tableName,
               TABLE_COMMENT as tableComment
        from information_schema.TABLES
        where TABLE_SCHEMA = (select database())
          and TABLE_NAME = #{tableName}
    </select>

    <select id="selectTableById" resultType="com.liu.generator.entity.GenTable">
        <include refid="selectGenTableVo"/>
        <where>
            `table_id` = #{id}
        </where>
    </select>
    <select id="selectTableByName" resultType="String">
        select TABLE_NAME
        from information_schema.TABLES
        where TABLE_SCHEMA = (select database())
          and TABLE_NAME = #{subName};
    </select>


    <!-- ================================ 丢弃方案 =========================== -->
    <insert id="insertGenTable 丢弃" parameterType="com.liu.generator.entity.GenTable">
        insert into `gen_table`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="genId != null and genId.length() > 0">
                gen_id,
            </if>
            <if test="tableName != null and tableName.length() > 0">
                table_name,
            </if>
            <if test="engine != null and engine.length() > 0">
                engine,
            </if>
            <if test="tableComment != null and tableComment.length() > 0">
                table_comment,
            </if>
            <if test="autoIncrement != null and autoIncrement.length() > 0">
                auto_increment,
            </if>
            <if test="className != null and className.length() > 0">
                class_name,
            </if>
            <if test="packageName != null and packageName.length() > 0">
                package_name,
            </if>
            <if test="moduleName != null and moduleName.length() > 0">
                module_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="genId != null and genId.length() > 0">
                #{genId},
            </if>
            <if test="tableName != null and tableName.length() > 0">
                #{tableName},
            </if>
            <if test="engine != null and engine.length() > 0">
                #{engine},
            </if>
            <if test="tableComment != null and tableComment.length() > 0">
                #{tableComment},
            </if>
            <if test="autoIncrement != null and autoIncrement.length() > 0">
                #{autoIncrement},
            </if>
            <if test="className != null and className.length() > 0">
                #{className},
            </if>
            <if test="packageName != null and packageName.length() > 0">
                #{packageName},
            </if>
            <if test="moduleName != null and moduleName.length() > 0">
                #{moduleName},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
        <selectKey keyProperty="genId" order="AFTER" resultType="String">
            select last_insert_id()
        </selectKey>
    </insert>

</mapper>